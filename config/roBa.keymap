#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 3
#define SCROLL 4
#define NUM 2
#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

&mt { quick-tap-ms = <0>; };

&sl { release-after-ms = <250>; };

&lt { quick-tap-ms = <0>; };

/ {
    combos {
        compatible = "zmk,combos";

        alt_tab {
            bindings = <&kp LEFT_ALT>;
            key-positions = <12 13>;
        };

        to_scroll {
            bindings = <&mo 4>;
            key-positions = <18 19>;
        };

        win_tab {
            bindings = <&kp LG(TAB)>;
            key-positions = <24 25>;
        };

        win_shift_right {
            bindings = <&kp LG(LS(RIGHT))>;
            key-positions = <13 20>;
        };

        win_shift_left {
            bindings = <&kp LS(LG(LEFT))>;
            key-positions = <13 18>;
        };

        win_shift_up {
            bindings = <&kp LS(LG(UP_ARROW))>;
            key-positions = <13 7>;
        };

        win_shift_down {
            bindings = <&kp LS(LG(DOWN_ARROW))>;
            key-positions = <13 19>;
        };

        change {
            bindings = <&kp LA(GRAVE)>;
            key-positions = <38 41>;
        };
    };

    macros {
        tog_off: toggle_layer_off {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };

        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        mkp_exit_AML: mkp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl 3>;

            label = "MKP_EXIT_AML";
        };

        m: m {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp J &kp G &kp NUMBER_2 &kp N8 &kp NUMBER_1 &kp NUMBER_4 &kp N5 &kp AT_SIGN &kp T &kp E &kp I &kp J &kp I &kp N &kp PERIOD &kp C &kp O &kp PERIOD &kp J &kp P>;
            label = "M";
        };

        p: p {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp Y &kp NUMBER_1 &kp N9 &kp NUMBER_2 &kp NUMBER_4 &kp N0 &kp NUMBER_3>;
            label = "P";
        };

        i: i {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp J &kp G &kp NUMBER_2 &kp N8 &kp NUMBER_1 &kp NUMBER_4 &kp N5>;
            label = "I";
        };

        l: l {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp J &kp G &kp NUMBER_2 &kp N8 &kp NUMBER_1 &kp NUMBER_4 &kp N5 &kp AT_SIGN &kp T &kp E &kp I &kp J &kp I &kp N &kp PERIOD &kp C &kp O &kp PERIOD &kp J &kp P &kp TAB &kp N &kp Y &kp NUMBER_1 &kp N9 &kp NUMBER_2 &kp NUMBER_4 &kp N0 &kp NUMBER_3 &kp TAB>;
            label = "L";
        };
    };

    behaviors {
        scroll_up_down: mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W         &kp E         &kp R    &kp T                                                          &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A      &kp S         &kp D         &kp F    &kp G        &kp LS(LG(S))                                     &kp SEMICOLON              &kp H        &kp J  &kp K      &kp L       &kp MINUS
&kp Z      &kp X         &kp C         &kp V    &kp B        &kp JP_HANZEN                                     &kp JP_DQUOTE              &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp JP_PLUS
&kp LCTRL  &kp LEFT_WIN  &kp LEFT_ALT  &kp TAB  &lt 1 SPACE  &mt LEFT_CONTROL DEL                              &mt RIGHT_SHIFT BACKSPACE  &lt 2 ENTER                                &lt 5 SLASH
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SYMBOL {
            bindings = <
&kp MINUS          &kp N7        &kp N8        &kp N9             &kp JP_PLUS                                                  &kp EXCLAMATION  &kp JP_LBRACKET       &kp JP_RBRACKET        &kp DOLLAR   &kp JP_AMPERSAND
&kp SLASH          &kp N4        &kp N5        &mt LEFT_SHIFT N6  &kp JP_ASTERISK  &trans                       &kp JP_COLON  &kp JP_AT        &kp JP_LPAREN         &kp JP_RPAREN          &kp PERCENT  &kp JP_YEN
&kp N0             &kp N1        &kp N2        &kp N3             &kp PERIOD       &kp JP_EQUAL                 &kp JP_QUOTE   &kp HASH         &kp JP_LBRACE         &kp JP_RBRACE          &kp JP_CARET &kp JP_PIPE
&trans             &trans        &trans        &trans             &trans           &trans                       &kp BACKSPACE  &kp ENTER                                                                  &kp JP_TILDE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        NUM_ARROW {
            bindings = <
&kp MINUS          &kp N7        &kp N8        &kp N9             &kp JP_PLUS                                           &kp PAGE_UP    &kp HOME        &kp UP_ARROW    &kp END          &trans
&kp SLASH          &kp N4        &kp N5        &mt LEFT_SHIFT N6  &kp JP_ASTERISK  &trans                       &trans  &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&kp N0             &kp N1        &kp N2        &kp N3             &kp PERIOD       &kp JP_EQUAL                 &trans  &trans         &trans          &trans          &trans           &trans
&trans             &trans        &trans        &trans             &trans           &trans                       &trans  &trans                                                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&to_layer_0 Q             &to_layer_0 W         &to_layer_0 E         &to_layer_0 R  &to_layer_0 T                                        &to_layer_0 Y  &to_layer_0 U      &to_layer_0 I  &to_layer_0 O       &to_layer_0 P
&to_layer_0 A             &to_layer_0 S         &to_layer_0 D         &to_layer_0 F  &to_layer_0 G             &trans                     &to_layer_0 SEMICOLON  &to_layer_0 H  &mkp_exit_AML MB1  &mkp MB2       &mkp MB3            &to_layer_0 MINUS
&to_layer_0 Z             &to_layer_0 X         &to_layer_0 C         &to_layer_0 V  &to_layer_0 B             &to_layer_0 LA(GRAVE)      &to_layer_0 SQT        &to_layer_0 N  &mkp MB4           &mkp MB5       &to_layer_0 PERIOD  &to_layer_0 EQUAL
&to_layer_0 LEFT_CONTROL  &to_layer_0 LEFT_WIN  &to_layer_0 LEFT_ALT  &trans         &trans                    &trans                     &trans                 &trans                                                               &to_layer_0 SLASH
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        FUNCTION {
            bindings = <
&kp ESCAPE   &kp F7  &kp F8  &kp F9  &kp F12                                        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans       &kp F4  &kp F5  &kp F6  &kp F11  &kp C_MUTE            &bt BT_CLR      &trans        &trans        &trans        &trans        &trans
&trans       &kp F1  &kp F2  &kp F3  &kp F10  &kp C_PLAY_PAUSE      &bt BT_CLR_ALL  &trans        &trans        &trans        &trans        &trans
&kp C_POWER  &trans  &trans  &l      &none    &m                    &i              &p                                                      &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
    };
};
